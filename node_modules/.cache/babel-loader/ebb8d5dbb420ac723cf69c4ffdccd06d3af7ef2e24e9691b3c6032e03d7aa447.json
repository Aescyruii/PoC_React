{"ast":null,"code":"var _jsxFileName = \"/home/jonat/delivery/project/perso/poc_react/src/components/TaskCard.tsx\";\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport TaskList from './TaskList.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction list() {\n  const listTask = TaskList.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: \"[task.name, task.desc, task.due] \"\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: listTask\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 16\n  }, this);\n}\nconsole.log(listTask);\nfunction TestCard() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 400\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: \"Something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          sx: {\n            mb: 3\n          },\n          children: \"Nothing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mb: 3\n          },\n          children: \"Due for tomorrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = TestCard;\nexport default TestCard;\nvar _c;\n$RefreshReg$(_c, \"TestCard\");","map":{"version":3,"names":["Typography","Card","CardContent","TaskList","jsxDEV","_jsxDEV","Fragment","_Fragment","list","listTask","map","task","children","id","fileName","_jsxFileName","lineNumber","columnNumber","console","log","TestCard","sx","maxWidth","variant","color","mb","_c","$RefreshReg$"],"sources":["/home/jonat/delivery/project/perso/poc_react/src/components/TaskCard.tsx"],"sourcesContent":["import Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport TaskList from './TaskList.json';\n\ntype Task = {\n    name: string;\n    desc: string;\n    due: string;\n};\n\nfunction list() {\n    const listTask = TaskList.map(task =>\n        <li key={task.id}>\n            [task.name, task.desc, task.due] </li>)\n        return <ul>{listTask}</ul>;\n}\n\nconsole.log(listTask);\n\nfunction TestCard(): JSX.Element {\n    return (\n        <>\n            <Card sx={{maxWidth: 400}}>\n                <CardContent>\n                    <Typography variant='h2'>\n                        Something\n                    </Typography>\n                    <Typography color='textSecondary' sx={{mb: 3}}>\n                        Nothing\n                    </Typography>\n                    <Typography sx={{mb: 3}}>\n                        Due for tomorrow\n                    </Typography>\n                </CardContent>\n            </Card>\n        </>\n    );\n}\n\nexport default TestCard;\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQvC,SAASC,IAAIA,CAAA,EAAG;EACZ,MAAMC,QAAQ,GAAGN,QAAQ,CAACO,GAAG,CAACC,IAAI,iBAC9BN,OAAA;IAAAO,QAAA,EAAkB;EACmB,GAD5BD,IAAI,CAACE,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACyB,CAAC,CAAC;EAC3C,oBAAOZ,OAAA;IAAAO,QAAA,EAAKH;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAClC;AAEAC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;AAErB,SAASW,QAAQA,CAAA,EAAgB;EAC7B,oBACIf,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA,CAACJ,IAAI;MAACoB,EAAE,EAAE;QAACC,QAAQ,EAAE;MAAG,CAAE;MAAAV,QAAA,eACtBP,OAAA,CAACH,WAAW;QAAAU,QAAA,gBACRP,OAAA,CAACL,UAAU;UAACuB,OAAO,EAAC,IAAI;UAAAX,QAAA,EAAC;QAEzB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbZ,OAAA,CAACL,UAAU;UAACwB,KAAK,EAAC,eAAe;UAACH,EAAE,EAAE;YAACI,EAAE,EAAE;UAAC,CAAE;UAAAb,QAAA,EAAC;QAE/C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbZ,OAAA,CAACL,UAAU;UAACqB,EAAE,EAAE;YAACI,EAAE,EAAE;UAAC,CAAE;UAAAb,QAAA,EAAC;QAEzB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC,gBACT,CAAC;AAEX;AAACS,EAAA,GAlBQN,QAAQ;AAoBjB,eAAeA,QAAQ;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}