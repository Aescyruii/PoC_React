{"ast":null,"code":"var _jsxFileName = \"/home/jonat/delivery/project/perso/poc_react/src/components/TaskCard.tsx\";\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport TaskList from './TaskList.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst listTask = TaskList.map(task => task);\nfunction TestCard() {\n  const cards = listTask.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 400\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            sx: {\n              mb: 3\n            },\n            children: task.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mb: 3\n            },\n            children: [\"Due for \", task.due]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: cards\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n}\n_c = TestCard;\nexport default TestCard;\nvar _c;\n$RefreshReg$(_c, \"TestCard\");","map":{"version":3,"names":["Typography","Card","CardContent","TaskList","jsxDEV","_jsxDEV","listTask","map","task","TestCard","cards","children","sx","maxWidth","variant","name","fileName","_jsxFileName","lineNumber","columnNumber","color","mb","desc","due","id","_c","$RefreshReg$"],"sources":["/home/jonat/delivery/project/perso/poc_react/src/components/TaskCard.tsx"],"sourcesContent":["import Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport TaskList from './TaskList.json';\n\ntype Task = {\n    id: number;\n    name: string;\n    desc: string;\n    due: string;\n};\n\nconst listTask = TaskList.map(task => task as Task)\n\nfunction TestCard(): JSX.Element {\n    const cards = listTask.map(\n        task =>\n            <li key={task.id}>\n                <div>\n                    <Card sx={{maxWidth: 400}}>\n                        <CardContent>\n                            <Typography variant='h2'>\n                                {task.name}\n                            </Typography>\n                            <Typography color='textSecondary' sx={{mb: 3}}>\n                                {task.desc}\n                            </Typography>\n                            <Typography sx={{mb: 3}}>\n                                Due for {task.due}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </div>\n            </li>\n        )\n    return (<ul>{cards}</ul>);\n}\n\nexport default TestCard;\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASvC,MAAMC,QAAQ,GAAGH,QAAQ,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAY,CAAC;AAEnD,SAASC,QAAQA,CAAA,EAAgB;EAC7B,MAAMC,KAAK,GAAGJ,QAAQ,CAACC,GAAG,CACtBC,IAAI,iBACAH,OAAA;IAAAM,QAAA,eACIN,OAAA;MAAAM,QAAA,eACIN,OAAA,CAACJ,IAAI;QAACW,EAAE,EAAE;UAACC,QAAQ,EAAE;QAAG,CAAE;QAAAF,QAAA,eACtBN,OAAA,CAACH,WAAW;UAAAS,QAAA,gBACRN,OAAA,CAACL,UAAU;YAACc,OAAO,EAAC,IAAI;YAAAH,QAAA,EACnBH,IAAI,CAACO;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACbd,OAAA,CAACL,UAAU;YAACoB,KAAK,EAAC,eAAe;YAACR,EAAE,EAAE;cAACS,EAAE,EAAE;YAAC,CAAE;YAAAV,QAAA,EACzCH,IAAI,CAACc;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACbd,OAAA,CAACL,UAAU;YAACY,EAAE,EAAE;cAACS,EAAE,EAAE;YAAC,CAAE;YAAAV,QAAA,GAAC,UACb,EAACH,IAAI,CAACe,GAAG;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,GAfDX,IAAI,CAACgB,EAAE;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAgBZ,CACR,CAAC;EACL,oBAAQd,OAAA;IAAAM,QAAA,EAAKD;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC5B;AAACM,EAAA,GAtBQhB,QAAQ;AAwBjB,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}