{"ast":null,"code":"var _jsxFileName = \"/home/jonat/delivery/project/perso/poc_react/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport './App.css';\nimport AddTasks from './components/AddTasks';\nimport TestCard from './components/TaskCard';\nimport TaskForm from './components/TaskForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TaskFormContext = /*#__PURE__*/createContext({});\nfunction Title() {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Hello World!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n}\n_c = Title;\nfunction App() {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskDesc, setTaskDesc] = useState(\"\");\n  const [taskDue, setTaskDue] = useState(\"\");\n  function handleClick() {\n    console.log(showForm);\n    setShowForm(!showForm);\n  }\n  return /*#__PURE__*/_jsxDEV(TaskFormContext.Provider, {\n    value: {\n      handleClick,\n      taskName,\n      taskDesc,\n      taskDue,\n      setTaskName,\n      setTaskDesc,\n      setTaskDue\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddTasks, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), showForm ? /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RiUIeDe83RvvHtmvJoCi9rIbUeA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","createContext","useState","AddTasks","TestCard","TaskForm","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskFormContext","Title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","showForm","setShowForm","taskName","setTaskName","taskDesc","setTaskDesc","taskDue","setTaskDue","handleClick","console","log","Provider","value","_c2","$RefreshReg$"],"sources":["/home/jonat/delivery/project/perso/poc_react/src/App.tsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\nimport './App.css';\nimport AddTasks from './components/AddTasks';\nimport TestCard from './components/TaskCard';\nimport TaskForm from './components/TaskForm';\n\nexport const TaskFormContext = createContext({});\n\nfunction Title(): JSX.Element {\n    return <h2>Hello World!</h2>\n}\n\nfunction App(): JSX.Element {\n  const [showForm, setShowForm] = useState(false)\n  const [taskName, setTaskName] = useState(\"\")\n  const [taskDesc, setTaskDesc] = useState(\"\")\n  const [taskDue, setTaskDue] = useState(\"\")\n\n  function handleClick() {\n    console.log(showForm)\n    setShowForm(!showForm)\n  }\n  return(\n    <TaskFormContext.Provider value={{\n      handleClick,\n      taskName,\n      taskDesc,\n      taskDue,\n      setTaskName,\n      setTaskDesc,\n      setTaskDue,\n    }}\n    >\n      <>\n        <Title />\n        <TestCard />\n        <AddTasks />\n        {showForm ? <TaskForm /> : null}\n      </>\n    </ TaskFormContext.Provider>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,OAAO,MAAMC,eAAe,gBAAGT,aAAa,CAAC,CAAC,CAAC,CAAC;AAEhD,SAASU,KAAKA,CAAA,EAAgB;EAC1B,oBAAOJ,OAAA;IAAAK,QAAA,EAAI;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAChC;AAACC,EAAA,GAFQN,KAAK;AAId,SAASO,GAAGA,CAAA,EAAgB;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAAS0B,WAAWA,CAAA,EAAG;IACrBC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACrBC,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB;EACA,oBACEb,OAAA,CAACG,eAAe,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAC/BJ,WAAW;MACXN,QAAQ;MACRE,QAAQ;MACRE,OAAO;MACPH,WAAW;MACXE,WAAW;MACXE;IACF,CAAE;IAAAf,QAAA,eAEAL,OAAA,CAAAE,SAAA;MAAAG,QAAA,gBACEL,OAAA,CAACI,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTT,OAAA,CAACH,QAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZT,OAAA,CAACJ,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACXI,QAAQ,gBAAGb,OAAA,CAACF,QAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAG,IAAI;IAAA,eAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACsB,CAAC;AAEhC;AAACG,EAAA,CA7BQD,GAAG;AAAAe,GAAA,GAAHf,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}